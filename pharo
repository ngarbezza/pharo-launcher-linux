#!/usr/bin/env python3

import os, sys
from configparser import RawConfigParser

# ----------------------------- CONSTANTS ----------------------------------- #

CONFIG_FILE    = os.path.expanduser('~/.pharo')
IMAGES_SECTION = 'images'
VMS_SECTION    = 'vms'
IMG_CMD        = 'image'
VM_CMD         = 'vm'

# ---------------------------- add COMMAND ---------------------------------- #

def add():
    try:
        arg = sys.argv[2]
        if arg == IMG_CMD: add_entry(IMAGES_SECTION, sys.argv[3], sys.argv[4])
        elif arg == VM_CMD: add_entry(VMS_SECTION, sys.argv[3], sys.argv[4])
        else: print("Wrong argument. Enter '%s' or '%s'" % (IMG_CMD, VM_CMD))
    except IndexError:
        print_missing_argument_msg('add')

def add_entry(section, name, path):
    check_config_file()
    check_sections()
    config = create_config()
    if config.has_option(section, name):
        print("Name %s is already associated with the path '%s'." % \
            (name, config.get(section, name)))
        choice = input("Do you want to replace it (y)/n: ")
        if choice in ['n', 'N', 'No', 'no', 'NO']: exit()
    if not os.path.exists(path) or not os.path.isfile(path):
        print("The path '%s' does not exist or it isn't a file" % path)
        exit()
    config.set(section, name, '"%s"' % os.path.abspath(path))
    write_config(config)
    print("%s added pointing to %s" % (name, path))

# -------------------------- launch COMMAND --------------------------------- #

def launch():
    try:
        vm = sys.argv[2]
        img = sys.argv[3]
        args = ' '.join(sys.argv[4:])
        config = create_config()
        if config.has_option(VMS_SECTION, vm):
            vm = config.get(VMS_SECTION, vm)
        if config.has_option(IMAGES_SECTION, img):
            img = config.get(IMAGES_SECTION, img)
        command = "%s %s %s &" % (vm, img, args)
        print("Executing '%s'..." % command)
        os.system(command)
    except IndexError:
        print_missing_argument_msg('launch')

# -------------------------- remove COMMAND --------------------------------- #

def remove():
    try:
        arg = sys.argv[2]
        if arg == IMG_CMD: remove_entry(IMAGES_SECTION, sys.argv[3])
        elif arg == VM_CMD: remove_entry(VMS_SECTION, sys.argv[3])
        else: print("Wrong argument. Enter '%s' or '%s'" % (IMG_CMD, VM_CMD))
    except IndexError:
        print_missing_argument_msg('remove')

def remove_entry(section, name):
    config = create_config()
    if config.has_option(section, name):
        config.remove_option(section, name)
        print("Name %s removed successfully" % name)
    else:
        print("The name %s does not exist." % name)
    write_config(config)

# --------------------------- list COMMAND ---------------------------------- #

def list(): os.system('cat '+ CONFIG_FILE)

# ------------------------------- HELP -------------------------------------- #

def show_help():
    print("""Pharo launcher for GNU/Linux.
    Usage: pharo <command> <arguments>

    Commands:
        launch
            Launch an image with a vm (path or name).
            Examples:
              pharo launch cog moose
              pharo launch /path/to/your/vm seaside
              pharo launch cog /path/to/your.image

        add
            Register an image or vm with a name.
            Examples:
              pharo add image seaside /home/user/images/seaside.image
              pharo add vm cog /home/user/vms/pharo

        remove
            Remove a vm or image association. This doesn't delete the
            image or vm, only the name associated to it.
            Examples:
              pharo remove image seaside

        list
            List all the images and vms registered.

        help
            Show this screen.
    """)
    exit()

# ------------------------- OTHER FUNCTIONS --------------------------------- #

def create_config():
    config = RawConfigParser()
    config.read(CONFIG_FILE)
    return config

def write_config(config):
    with open(CONFIG_FILE, 'w') as f: config.write(f)

def print_missing_argument_msg(cmd):
    print("Missing argument to " + cmd + " command. Type 'pharo help' " \
            + "to see some examples of this command.")

def check_sections():
    config = create_config()
    for section in [VMS_SECTION, IMAGES_SECTION]:
        if not config.has_section(section): config.add_section(section)
    write_config(config)

def check_config_file():
    if not os.path.exists(CONFIG_FILE):
        with open(CONFIG_FILE, 'w') as f: pass

# ------------------------------- MAIN -------------------------------------- #

if __name__ == '__main__':
    try: cmd = sys.argv[1]
    except IndexError: show_help()
    if cmd == 'launch': launch()
    elif cmd == 'add': add()
    elif cmd == 'remove': remove()
    elif cmd == 'list': list()
    elif cmd == 'help': show_help()
    else: print("Unknown command. Type 'pharo help'" \
        + " to get the list of available commands")
    exit()
